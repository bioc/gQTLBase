\name{storeToFf}
\alias{storeToFf}
%\alias{storeToQuantiles}
%\alias{storeToHist}
%\alias{storeToFDR}
%\alias{storeToFDRByProbe}
%- Also NEED an '\alias' for EACH other topic documented here.
\title{
extract a vector from store results as ff (out of memory reference);
support statistical reductions
}
\description{
extract a vector from store results as ff (out of memory reference);
support statistical reductions
}
\usage{
storeToFf(store, field, ids = NULL, filter=force, ..., checkField = FALSE,
   ischar=FALSE)
}
%- maybe also 'usage' for other objects documented here.
\arguments{
  \item{store}{
instance of \code{\link{ciseStore-class}}
}
  \item{field}{
character tag, length one. If name of a numeric field
in the result set (typically something like 'chisq' in the GRanges
generated by cisAssoc), ff is applied directly.  
Character variables are converted to factors before ff is applied.
}
  \item{ids}{
job ids to be used; if NULL, process all jobs
}
  \item{filter}{
function to be applied when GRanges is loaded from results
store, should accept and return a GRanges instance
}
  \item{\dots}{
supplied to makeRegistry for a temporary registry: typically
will be a vector of package names if additional packages are needed to process
results
}
  \item{checkField}{
if TRUE steps will be taken to verify that the tag to which 'field'
evaluates is present in result in the first job
}
  \item{ischar}{
must be true for character vector to be handled properly
as a factor, otherwise NA will be returned
}
}
\details{
uses current BatchJobs configuration to parallelize extraction;
reduceResults could be used for a sequential solution
}
\value{
a vector as ff reference
}
%\references{
%% ~put references to the literature/web site here ~
%}
%\author{
%%%  ~~who you are~~
%}
\note{
uses ffbase:::c.ff explicitly to concatenate outputs; there
is no guarantee of order among elements
}

%% ~Make other sections like Warning with \section{Warning }{....} ~

%\seealso{
%% ~~objects to See Also as \code{\link{help}}, ~~~
%}
\examples{
if (require(geuvStore)) {
 require(BatchJobs)
 reg = partialRegistry()
 store = ciseStore(reg, addProbeMap=FALSE, addRangeMap=FALSE)
 if (.Platform$OS.type == "windows") {
  library(BiocParallel)
  p = SerialParam()
  register(p)
  }
 smchisq = storeToFf( store, "chisq", ids=store@validJobs[1:3]) 
 smchisq
 }
}
% Add one or more standard keywords, see file 'KEYWORDS' in the
% R documentation directory.
\keyword{ models }
